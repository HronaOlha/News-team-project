{"mappings":"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","sources":["src/readPage.js","src/scripts/read.js","src/scripts/searchNewsFromReadStorage.js"],"sourcesContent":["import './scripts/current';\nimport './scripts/mobileMenu';\nimport './scripts/newsCardFromStorage';\nimport './scripts/read';\nimport './scripts/searchNewsFromReadStorage'\n","import { Report } from 'notiflix/build/notiflix-report-aio';\nimport { spinner } from './libraries';\nimport { addClassesForCoincidencesMarkupAndStoragePages } from './commonFunctions';\n\nconst cardList = document.getElementById('ul-gallery');\nconst spinnerContainer = document.querySelector('.spinner-container');\n\nonParse();\n\nfunction onParse() {\n  spinner.spin(document.body);\n  try {\n    const unparsed = localStorage.getItem('read more');\n    const parsed = JSON.parse(unparsed);\n\n    if (parsed === null) {\n      spinner.stop();\n      return;\n    } else if (parsed.length === 0) {\n      spinner.stop();\n      Report.info('There are no news You have read');\n    } else {\n      renderMarkup(parsed);\n      spinner.stop();\n    }\n  } catch (err) {\n    console.error(err);\n    spinner.stop();\n  }\n}\n\nfunction renderMarkup(array) {\n  let cardMarkup = '';\n\n  // -------сортируем даты по убыванию и выделяем уникальные даты---------\n\n  const initialDates = array.map(obj => obj.date);\n  const descendingDates = [...initialDates]\n    .sort((a, b) => b - a)\n    .map(dateUnix => {\n      const dateStamp = new Date(dateUnix);\n\n      return `${String(dateStamp.getDate()).padStart(2, 0)}/${String(\n        dateStamp.getMonth() + 1\n      ).padStart(2, 0)}/${String(dateStamp.getFullYear())}`;\n    });\n  const uniqueDates = descendingDates.filter(\n    (course, index, array) => array.indexOf(course) === index\n  );\n\n  //------- создаем массив объектов с датой в формате day/month/year---------\n\n  const arrayConverDates = array.reduce((acc, obj) => {\n    const newObj = {};\n    const dateStamp = new Date(obj.date);\n\n    newObj.date = `${String(dateStamp.getDate()).padStart(2, 0)}/${String(\n      dateStamp.getMonth() + 1\n    ).padStart(2, 0)}/${String(dateStamp.getFullYear())}`;\n    newObj.img = obj.img;\n    newObj.descr = obj.descr;\n    newObj.title = obj.title;\n    newObj.link = obj.link;\n    newObj.alt = obj.alt;\n    newObj.category = obj.category;\n    newObj.id = obj.id;\n    newObj.dateArticle = obj.dateArticle;\n\n    acc.push(newObj);\n    return acc;\n  }, []);\n\n  //------- рендерим разметку по отсортированным уникальным датам---------\n  spinner.spin(spinnerContainer);\n\n  for (let date of uniqueDates) {\n    // --------------рендер заголовка с датой прочтения новостей-----------------\n    const cardMarkupLi = `<li>\n            <div class=\"date-wrap\">\n                <p class=\"cards-date\">${date}\n                   <svg class=\"arrow-read\" width=\"15\" height=\"9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                     <path d=\"M1.762 9 0 7.287 7.5 0 15 7.287 13.238 9 7.5 3.437 1.763 9Z\" fill=\"#111321\"/>\n                   </svg>\n                   <svg class=\"arrow-read visually-hidden\" width=\"15\" height=\"9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                     <path d=\"M1.762 0 0 1.713 7.5 9 15 1.713 13.238 0 7.5 5.563 1.763 0Z\" fill=\"#111321\"/>\n                   </svg>\n                </p>\n                <div class=\"clicker\"></div>\n            </div>\n            <div class=\"news-item\">\n                <div class=\"news-wrap\">`;\n\n    // ---------------рендер карточек новостей согласно прочитанной дате в заголовке---------\n\n    const cardMarkupDiv = arrayConverDates\n      .filter(obj => obj.date === date)\n      .map(obj => {\n        return `<div class=\"news-card\" news-id=\"${obj.id}\">\n      <div class=\"news-card__img\">\n        <p class=\"news-card__theme\">${obj.category}</p>\n        <img\n          class=\"news-card__item\"\n          src=\"${obj.img}\"\n          alt=\"${obj.alt ? obj.alt : 'photo'}\"\n          loading=\"lazy\"\n          width=\"395\"\n        />\n        <div class=\"news-card__favorite\">\n        <button id ='${obj.id}' class=\"mybtn label-favorite\">Add to favorite</button>\n        </div>\n      </div>\n      <h2 class=\"news-card__info-title\">${obj.title.limit(50, {\n        ending: '',\n      })}</h2>\n      <p class=\"news-card__info-text\">${obj.descr.limit(120)}</p>\n      <div class=\"news-card__additional\">\n        <p class=\"news-card__date\">${obj.dateArticle}</p>\n        <a class=\"news-card__more\" href=\"${obj.link}\" id=\"${\n          obj.id\n        }\" target=\"_blank\" rel=\"noreferrer noopener\">Read more</a>\n      </div>\n    </div>`;\n      });\n    cardMarkup += cardMarkupLi + cardMarkupDiv.join('') + '</div></div></li>';\n  }\n  cardList.innerHTML = cardMarkup;\n\n  spinner.stop();\n\n  // --проставляю всем контейнерам с новостями высоту по занимаемому контенту-------------------------\n\n  document\n    .querySelectorAll('.news-item')\n    .forEach(el => (el.style.maxHeight = el.scrollHeight + 'px'));\n\n  // --делаю выпадающий список с новостями по датам - accordion-------------------\n  document.querySelectorAll('.cards-date').forEach(el =>\n    el.addEventListener('click', () => {\n      const svg = el.children;\n      for (let itemsvg of svg) itemsvg.classList.toggle('visually-hidden');\n\n      const newsItem = el.parentNode.nextElementSibling;\n      if (newsItem.style.maxHeight !== '0px') newsItem.style.maxHeight = '0px';\n      else newsItem.style.maxHeight = newsItem.scrollHeight + 'px';\n    })\n  );\n}\n\n// ---замена дат в хранилище \"read more\" на случайные---\n\n// const clicker = document.querySelector('.clicker');\n// clicker.addEventListener('click', onClick);\n\n// function getRandomIntInclusive(min, max) {\n//   min = Math.ceil(min);\n//   max = Math.floor(max);\n//   return Math.floor(Math.random() * (max - min + 1)) + min;\n// }\n\n// function onClick() {\n//   try {\n//     const unparsed = localStorage.getItem('read more');\n//     const parsed = JSON.parse(unparsed);\n\n//     if (parsed === null) return;\n//     else if (parsed.length === 0)\n//       Report.info('There are no news You have read');\n//     else {\n//       const arrayChangedDates = parsed.reduce((acc, obj) => {\n//         const newObj = {};\n//         const i = getRandomIntInclusive(1, 9) * 86400000;\n\n//         newObj.date = obj.date - i;\n//         newObj.img = obj.img;\n//         newObj.descr = obj.descr;\n//         newObj.title = obj.title;\n//         newObj.link = obj.link;\n//         newObj.alt = obj.alt;\n//         newObj.category = obj.category;\n//         newObj.id = obj.id;\n//         newObj.dateArticle = obj.dateArticle;\n//         acc.push(newObj);\n//         // i += 1;\n//         return acc;\n//       }, []);\n\n//       renderMarkup(arrayChangedDates);\n//     }\n//   } catch (err) {\n//     console.error(err);\n//   }\n// }\n\naddClassesForCoincidencesMarkupAndStoragePages();\n","import {\n  getStorageList,\n  showNotFoundMessage,\n  hideNotFoundMessage,\n} from './commonFunctions';\n\n// const inputEl = document.querySelector('.search-input');\nconst formEl = document.getElementById('search-form');\n\nconst galleryEl = document.querySelector('.gallery-container');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  hideNotFoundMessage();\n  const searchValue = e.target.elements.searchQuery.value;\n\n  const arr = getStorageList('read more');\n\n  const newArrObj = arr.filter(\n    obj =>\n      obj.descr.toLowerCase().includes(searchValue.toLowerCase().trim()) ||\n      obj.category.toLowerCase().includes(searchValue.toLowerCase().trim()) ||\n      obj.title.toLowerCase().includes(searchValue.toLowerCase().trim())\n  );\n\n  if (newArrObj.length > 0) {\n    render(newArrObj);\n  } else {\n    galleryEl.innerHTML = '';\n    showNotFoundMessage();\n  }\n}\n\nfunction render(arr) {\n  const markUp = arr.reduce((acc, el) => {\n    acc += `<div class=\"news-card\" style=\"padding-top: 100px;\" news-id=\"${\n      el.id\n    }\">\n      <div class=\"news-card__img\">\n        <p class=\"news-card__theme\">${el.category}</p>\n        <img\n          class=\"news-card__item\"\n          src=\"${el.img}\"\n          alt=\"${el.alt ? el.alt : 'photo'}\"\n          loading=\"lazy\"\n          width=\"395\"\n        />\n        <div class=\"news-card__favorite\">\n        <button id ='${\n          el.id\n        }' class=\"mybtn label-favorite\">Add to favorite</button>\n        </div>\n      </div>\n      <h2 class=\"news-card__info-title\">${el.title}</h2>\n      <p class=\"news-card__info-text\">${el.descr.limit(180)}</p>\n      <div class=\"news-card__additional\">\n        <p class=\"news-card__date\">${el.dateArticle}</p>\n        <a class=\"news-card__more\" href=\"${el.link}\" id=\"${\n      el.id\n    }\" target=\"_blank\" rel=\"noreferrer noopener\"}>Read more</a>\n      </div>\n    </div>`;\n    return acc;\n  }, ``);\n  // console.log(markUp)\n  galleryEl.innerHTML = markUp;\n}\n"],"names":["parcelRequire","$i37YJ","$add483b13248caae$var$cardList","document","getElementById","$add483b13248caae$var$spinnerContainer","querySelector","$3yaUv","spinner","spin","body","unparsed","localStorage","getItem","parsed","JSON","parse","stop","length","Report","info","array1","cardMarkup","initialDates","map","obj","date","uniqueDates","sort","a","b","dateUnix","dateStamp","Date","String","getDate","padStart","getMonth","getFullYear","filter","course","index","array","indexOf","arrayConverDates","reduce","acc","newObj","img","descr","title","link","alt","category","id","dateArticle","push","limit","ending","join","innerHTML","querySelectorAll","forEach","el","style","maxHeight","scrollHeight","addEventListener","svg","children","itemsvg","classList","toggle","newsItem","parentNode","nextElementSibling","$add483b13248caae$var$renderMarkup","err","console","error","$add483b13248caae$var$onParse","$cgfmJ","addClassesForCoincidencesMarkupAndStoragePages","$ba58ca85ca740af8$var$formEl","$ba58ca85ca740af8$var$galleryEl","e","preventDefault","hideNotFoundMessage","searchValue","target","elements","searchQuery","value","newArrObj","getStorageList","toLowerCase","includes","trim","arr","markUp","$ba58ca85ca740af8$var$render","showNotFoundMessage"],"version":3,"file":"read.985b60a7.js.map"}